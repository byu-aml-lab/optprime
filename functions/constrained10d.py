from __future__ import division
from itertools import izip
from math import cos, pi
from Numeric import array, dot
import _general

from sphere import Sphere
from rastrigin import Rastrigin
from rosenbrock import Rosenbrock
from griewank import Griewank
from quadratic import Quadratic

t_forward = array([
        [-5.84867764e-01,   4.01492785e-01,  -2.16722152e-01, 8.78739728e-02,
            0.00000000e+00,   3.87251647e-01, 1.70529494e-01,   2.58049913e-01,
            -9.23853163e-02, -4.33444305e-01,   0.00000000e+00],
        [7.13217948e-01,   5.17656621e-01,   3.97903733e-02, 1.56647714e-02,
            0.00000000e+00,  -1.13888024e-02, 2.84015709e-02,   1.74131719e-01,
            -2.78723497e-01, -3.35526639e-01,   0.00000000e+00],
        [1.76962910e-02,  -5.22855937e-01,   4.28511808e-01, -3.99172832e-02,
            0.00000000e+00,  -1.47936399e-01, 2.80575409e-01,   4.17235723e-01,
            4.71720645e-02, -5.13978754e-01,   0.00000000e+00],
        [9.45643966e-02,  -1.24355453e-01,   1.70527036e-02, 9.08118549e-01,
            0.00000000e+00,   8.67360358e-02, 1.03788739e-01,  -3.25201853e-01,
            5.36513746e-02, -1.53926104e-01,   0.00000000e+00],
        [-1.70928313e-01,   2.65582943e-01,   7.04120445e-01, -6.19452313e-02,
            5.05548348e-01,   9.66808750e-02, -2.10295376e-01,  -2.94818776e-01,
            2.06966544e-02, -6.42609409e-02,   0.00000000e+00],
        [ -1.00153800e-01,   1.55615770e-01,   4.12572599e-01, -3.62962122e-02,
            -8.62798278e-01,  5.66492284e-02, -1.23220552e-01,  -1.72746225e-01,
            1.21270055e-02, -3.76530799e-02,  -3.94339688e+00],
        [-1.47646990e-01,   1.76587762e-01,   1.96208625e-01, 4.00756116e-01,
            0.00000000e+00,  -2.75673118e-01, -2.89407722e-01,   6.53865243e-01,
            -8.14265794e-02, 3.92417250e-01,   2.58946333e+00],
        [1.27370931e-01,  -1.64397365e-01,   2.20677543e-01, 0.00000000e+00,
            0.00000000e+00,   6.39816770e-01, 3.70264335e-01,   1.27370931e-01,
            -3.88037023e-01, 4.41355087e-01,  -3.02580014e+00],
        [-2.50447628e-01,   2.14669395e-02,   7.15564651e-03, 0.00000000e+00,
            0.00000000e+00,  -5.15206549e-01, 2.93381507e-01,  -2.50447628e-01,
            -7.22720298e-01, 1.43112930e-02,   7.72809823e-01],
        [2.92746578e-17,  -3.58568583e-01,  -1.19522861e-01, 0.00000000e+00,
            0.00000000e+00,   2.39045722e-01, -7.17137166e-01,   0.00000000e+00,
            -4.78091444e-01, -2.39045722e-01,  -3.58568583e-01],
        [0.00000000e+00,   0.00000000e+00,   0.00000000e+00, 0.00000000e+00,
            0.00000000e+00,   0.00000000e+00, 0.00000000e+00,   0.00000000e+00,
            0.00000000e+00, 0.00000000e+00,   1.00000000e+00]
        ])
t_reverse = array([
       [ -5.84867764e-01,   7.13217948e-01,   1.76962910e-02,   9.45643966e-02,
          -1.70928313e-01,  -1.00153800e-01,  -1.47646990e-01,   1.27370931e-01,
          -2.50447628e-01,  -1.16747941e-16,   5.66327651e-01],
       [  4.01492785e-01,   5.17656621e-01,  -5.22855937e-01,  -1.24355453e-01,
           2.65582943e-01,   1.55615770e-01,   1.76587762e-01,  -1.64397365e-01,
           2.14669395e-02,  -3.58568583e-01,  -4.86207653e-01],
       [ -2.16722152e-01,   3.97903733e-02,   4.28511808e-01,   1.70527036e-02,
           7.04120445e-01,   4.12572599e-01,   1.96208625e-01,   2.20677543e-01,
           7.15564651e-03,  -1.19522861e-01,   1.73820151e+00],
       [  8.78739728e-02,   1.56647714e-02,  -3.99172832e-02,   9.08118549e-01,
          -6.19452313e-02,  -3.62962122e-02,   4.00756116e-01,   5.99016108e-17,
          -1.48359169e-17,   7.49786034e-18,  -1.18087364e+00],
       [ -5.50216707e-18,  -9.29868582e-18,   4.92657538e-17,  -5.00041183e-18,
           5.05548348e-01,  -8.62798278e-01,   2.77810564e-18,   3.81276330e-18,
          -7.49698158e-18,   2.32636465e-33,  -3.40235604e+00],
       [  3.87251647e-01,  -1.13888024e-02,  -1.47936399e-01,   8.67360358e-02,
           9.66808750e-02,   5.66492284e-02,  -2.75673118e-01,   6.39816770e-01,
          -5.15206549e-01,   2.39045722e-01,   3.35706446e+00],
       [  1.70529494e-01,   2.84015709e-02,   2.80575409e-01,   1.03788739e-01,
          -2.10295376e-01,  -1.23220552e-01,  -2.89407722e-01,   3.70264335e-01,
           2.93381507e-01,  -7.17137166e-01,   8.99978049e-01],
       [  2.58049913e-01,   1.74131719e-01,   4.17235723e-01,  -3.25201853e-01,
          -2.94818776e-01,  -1.72746225e-01,   6.53865243e-01,   1.27370931e-01,
          -2.50447628e-01,  -5.48147159e-17,  -1.79541962e+00],
       [ -9.23853163e-02,  -2.78723497e-01,   4.71720645e-02,   5.36513746e-02,
           2.06966544e-02,   1.21270055e-02,  -8.14265794e-02,  -3.88037023e-01,
          -7.22720298e-01,  -4.78091444e-01,  -5.28352967e-01],
       [ -4.33444305e-01,  -3.35526639e-01,  -5.13978754e-01,  -1.53926104e-01,
          -6.42609409e-02,  -3.76530799e-02,   3.92417250e-01,   4.41355087e-01,
           1.43112930e-02,  -2.39045722e-01,   7.40469745e-02],
       [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           0.00000000e+00,   0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           0.00000000e+00,   0.00000000e+00,   1.00000000e+00]
       ])

class ConstrainedFunc10d(_general._Base):
    def __call__(self, vec):
        realvec = vec[:5]
        if len(realvec) < 5:
            realvec.extend([0.0] * (5-len(realvec)))
        realvec.extend([0.0] * 5)
        realvec.append(1.0)

        # Push this vector back out into the original world, evaluate the true
        # function, and return that.

        expandedvec = dot(t_reverse, array(realvec))
        return self.func(expandedvec)

class ConstrainedSphere10d(ConstrainedFunc10d):
    def setup(self):
        super(ConstrainedSphere10d, self).setup()
        self.func = Sphere()
        self.func.dims = 10
        self.func.setup()
        self._set_constraints(((-100,100),) * self.dims)

class ConstrainedQuadratic10d(ConstrainedFunc10d):
    def setup(self):
        super(ConstrainedQuadratic10d,self).setup()
        self.func = Quadratic()
        self.func.dims = 10
        self.func.setup()
        self._set_constraints(((-100,100),) * self.dims)

class ConstrainedRastrigin10d(ConstrainedFunc10d):
    def setup(self):
        super(ConstrainedRastrigin10d,self).setup()
        self.func = Rastrigin()
        self.func.dims = 10
        self.func.setup()
        self._set_constraints(((-100,100),) * self.dims)

class ConstrainedRosenbrock10d(ConstrainedFunc10d):
    def setup(self):
        super(ConstrainedRosenbrock10d,self).setup()
        self.func = Rosenbrock()
        self.func.dims = 10
        self.func.setup()
        self._set_constraints(((-100,100),) * self.dims)

class ConstrainedGriewank10d(ConstrainedFunc10d):
    def setup(self):
        super(ConstrainedGriewank10d,self).__init__()
        self.func = Griewank()
        self.func.dims = 10
        self.func.setup()
        self._set_constraints(((-100,100),) * self.dims)
